<html lang="ko" class="h-100" data-bs-theme="auto">
  <head>
    <!-- CDN들 불러오기 -->
    <%- include('../components/cdn.ejs') %>
    <!-- axios -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <!-- CSS 연결 -->
    <link href="../static/css/board.css" rel="stylesheet" />
    <title>게시판</title>
  </head>
  <body class="d-flex h-100 text-center text-bg-white">
    <!-- 헤더 : 상단 메뉴바  -->
    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <header class="container">
        <div><%- include('../components/header.ejs') %></div>
      </header>
      <main class="px-3">

        <% let BC; %>
        <% if (category === '자유') { %>
          <% BC = 'red'; %>
        <% } else if (category === 'Q&A') { %>
          <% BC = 'yellow'; %>
        <% } else { %>
          <% BC = 'blue'; %>
        <% } %>
        
   
      <div class="inner-box box-color-<%= BC %>">
        
            <!-- css 구현할때 인라인style요소 삭제해야함-->
            <!-- 여기에 내용이 들어감 -->
            <!-- ejs 사용 -->
            <div class="top-container">
              <div class="top-se-inner">
                    
                   <div class="profile-container">
                      <img class="profile-image" src="/<%= image || 'static/img/bagicimg.jpeg' %>" alt="" >
                      <div class="C-nickname"><%= nickname %></div>
                   </div>

                   <div class="C-category"><%= category %></div> 

                </div>

                <div class="C-title"><%= title %></div>
                <div class="C-content"><%= content %></div>
              </div>
              
                      
           
        
          <div class="botton-container">
            <div class="view-container">
              
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye" viewBox="0 0 16 16">
                <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z"/>
                <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z"/>
              </svg>
              <div id="viewCount">   <%= viewCount %></div>
              <div class="C-createBoard">작성일: <%= createBoard %> </div>
              <!-- <div>수정일: 쓸거면 ejs문법  modifiedBoard ejs문법 (수정됨)</div> -->
            </div>
            
        
            <!-- 작성자와 로그인된 유저가 일치할때 삭제, 수정 버튼이 생김 -->
            <div class="DBoard-button">
                <% if (user && user.id && user.id == id) { %>
                    <button class="button" type="button" onclick="changeBoard('<%=boardID%>')"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                       <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
                     </svg>
                   </button>
                    <button class="button" type="button" onclick="delBoard()"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z"/>
                    </svg>
                    </button>

                <% } %>
            </div>

          </div>

      
        </div>


          <!--  여기 아래에 댓글기능을 붙이면 될 것 같습니다~! -->
          <div>
            <form name="form-comment"  onsubmit="return false;"">
              <fieldset>
              
                <div class="put-comment">
                  
                  <input type="text" name="Field" placeholder="댓글을 입력해 주세요" required/>
                  <button class="input-button" type="button" onclick="addComment()">등록</button>
                </div>
                
                <br />
                <div class="btn-group">
                  
                </div>
              </fieldset>
            <input type="hidden" name="boardID" value="<%= boardID %>">
          </form>
          <div style="width: 100%;">
            <table border="0" cellspacing="0" style="width: 100%;">
              <tbody style="width: 100%;">
                <% if(user) { %>
                  <% for(let i = 0; i< data.length; i++) { %> 
                    <div class="view-content-top">
                        <div class="data-image">

                          <img class="profile-image" src="/<%= data[i].User.image || 'static/img/bagicimg.jpeg' %>" alt="" >
                        </div> 

                        <div class="view-content">
                        

                      

                          <div class="comment-top">
                              <div class="comment-user">
                                <div class="data-nickname"><%= data[i].User.nickname %> </div>
                                <div class="data-createComment"><%= data[i].createComment %></div>
                              </div>

                              <div class="comment-buttons">
                                <% if (isAuthenticated && user.id === data[i].id) { %>
                                    <button class="button" type="button" onclick="updateComment('<%= data[i].commentID %>')"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                      <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                         <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
                                       </svg>
                            </button>
                                    <button class="button" type="button" onclick="deleteComment('<%= data[i].commentID %>')">
                                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                                   <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z"/>
                                                 </svg></button>
                                <% } %>
                              </div>  
                          </div>

                          <div class="data-field"><%= data[i].Field %></div> 
                          
                        </div>
                      
                      </div>
                    </div>
                      
                      </tr> 
                  <% } %>
                <% }else { %>
                  <% for(let i = 0; i< data.length; i++) { %> 
                    <div class="view-content-top">
                      <div class="data-image">

                        <img class="profile-image" src="/<%= data[i].User.image || 'static/img/bagicimg.jpeg' %>" alt="" >
                      </div> 

                      <div class="view-content">
                      

                    

                        <div class="comment-top">
                            <div class="comment-user">
                              <div class="data-nickname"><%= data[i].User.nickname %> </div>
                              <div class="data-createComment"><%= data[i].createComment %></div>
                            </div>

                            <div class="comment-buttons">
                             
                            </div>  
                        </div>

                        <div class="data-field"><%= data[i].Field %></div> 
                        
                      </div>
                    
                    </div>
                  </div>
                     
                  <% } %>
                <% } %>
              </tbody>

            </table>
          </div>
        </div>
       
      </main>
    
      <script>


        //삭제 axios
        function delBoard(){
      
          const boardID = "<%= boardID %>";
          axios({
                method: "delete",
                url: `/deleteBoard/${boardID}`,
              }).then((res) => {
                      
                alert(res.data);//리뷰가 삭제됐다고 알림
                window.location.href = '/boardMain';//게시판으로 리다이렉트
              });
        }

        
        function changeBoard(boardID){
          //쿼리에 보드아이디 정보를 담아서 수정페이지로 리다이렉션 
          window.location.href = `/boardModify/${boardID}`;//잘넘어감
        }

      
        
        fetch("/increaseViewCount/<%= boardID %>", {
            method: 'PATCH',
          })
          .then(response => response.json())
          .then(data => {
            // data는 증가된 조회수를 포함한 게시글의 데이터입니다.
            // 이 data를 이용해서 페이지를 업데이트합니다.
            document.getElementById('viewCount').textContent = data.viewCount;
          })
          .catch((error) => {
            console.error('Error:', error);
          });



        // 여기서부터 댓글 !
        function addComment() {
        // 서버에 보낼 데이터를 만들어야 함.
        const form = document.forms["form-comment"];
        const userId = `<%= user ? user.id : null %>`
        console.log("userId:", userId); 
        
          // 유효성 검사 추가
          if (!form.Field.value.trim()) {
            alert("댓글을 입력해주세요.");
            form.Field.focus();
            return;
          }

        const data = {
          id : userId,
            // 서버에서 생성한 ID 사용
          boardID : form.boardID.value,
          Field: form.Field.value,
          createComment: new Date() // 댓글 작성 시간 추가
        }

        console.log("data:", data); 

        // axios를 이용해 데이터를 서버로 전송.
        axios({
          method: 'post',
          url: '/comment',
          data: data
        }).then((res) => {
          location.reload();
          
        })
        .catch((error) => {
          console.error("Error adding comment:", error);
          alert("댓글 등록에 실패했습니다. 로그인 후 이용해주세요.");
    });
        
        
      }


      function deleteComment(commentID) {
  axios({
    method: 'delete',
    url: `/comment/${commentID}`
  }).then((res) => {
    console.log(res.data);

    if (res.data.result) {
      location.reload();
      // 삭제 성공한 경우 해당 행을 삭제
      $(`#tr_${commentID}`).remove();
    } else {
      alert("존재하지 않는 댓글입니다.");
    }
  });
}

function updateComment(commentID) {
  axios({
    method: 'get',
    url: `/comment/${commentID}`,
  }).then((res) => {
    const { commentID, boardId, Field } = res.data;

    // commentID 값을 저장하고, 수정 폼에 필요한 값만 설정
    const form = document.forms['form-comment'];
    form.dataset.commentID = commentID;
    form.dataset.boardID = boardId;
    form.Field.value = Field;

    // [변경], [취소] 버튼 보이기
    $(".put-comment").html(`
      <input type="text" name="Field" placeholder="댓글을 입력해 주세요" value="${Field}" required/>
      <button  class="input-button" type='button' onclick='editDo("${commentID}");'>변경</button>
      <button class="input-button" type='button' onclick='editCancel();'>취소</button>
    `);
    

  });
}



// 수정된 editDo 함수
function editDo(commentID) {
  const form = document.forms['form-comment'];
  // 유효성 검사 추가
  if (!form.Field.value.trim()) {
    alert("댓글을 입력해주세요.");
    form.Field.focus();
    return;
  }
  const data = {
    commentID: commentID,
    Field: form.Field.value
  };

  axios({
    method: 'patch',
    url: `/comment`,
    data: data
  }).then((res) => {
    location.reload();
    // 업데이트 성공 시 해당 행의 내용을 변경
    let fieldText = form.Field.value;
    $(`#td_${commentID}`).text(fieldText);

    // 입력창 초기화
    editCancel();
  }).catch((error) => {
    console.error("Error updating comment:", error);
    location.reload();
    
  });
}

  function editCancel() {
    // (1) input 초기화
    const form = document.forms['form-comment'];
    form.Field.value = '';

  
  }


      </script>


    </div>
  </body>
</html>
