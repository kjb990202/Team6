<!DOCTYPE html>
<html lang="ko" class="h-100" data-bs-theme="auto">
  <head>
    <!-- CDN들 불러오기 -->
    <%- include('../components/cdn.ejs') %>
    <!-- CSS 연결 -->
    <link href="../static/css/board.css" rel="stylesheet" />
    <title>게시판</title>
  </head>
  <body class="d-flex h-100 text-center text-bg-white">
    <!-- 헤더 : 상단 메뉴바  -->
    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <header class="container">
        <div><%- include('../components/header.ejs') %></div>
      </header>
      <main class="px-3">
        <button type="button" onclick="location.href='/boardEdit'">
          작성하기
        </button>
        <ul class="board-list">
          
        </ul>
      </main>
      <script>
        //요소 생성
        const boardList = document.querySelector(".board-list"); //보드를 담을 리스트
        const boards = document.querySelectorAll(".nowBox-list"); //현재 출력되고있는 보드를 담을 리스트
        let cursor = null;
        function getBoard() {
          axios({
            method: "get",
            url: "/getBoard",
            params: {
              cursor: cursor,
            },
          })
            .then(function (res) {
              console.log("얻은데이터:", res.data);
              console.log("새로받은 데이터 개수:", res.data.length);

              const boardList = document.querySelector(".board-list");

              res.data.forEach((boardData) => {
                const newBoard = document.createElement("li");
                newBoard.className = "nowBox-list";

                newBoard.innerHTML = `
                  <div onclick="moveBoardDetail(${boardData.boardID})" style="cursor:pointer">
                    <div class="title">제목: ${boardData.title}</div>
                    <div class="userId">작성자: ${boardData.user.nickname}</div>
                    <div class="category">카테고리: ${boardData.category}</div>
                    <div class="content">${boardData.content}</div>
                    <div class="views">조회수: ${boardData.views}</div>
                    <div class="createBoard">작성일: ${boardData.createBoard}</div>
                    <div class="modifiedBoard">수정일: ${boardData.modifiedBoard}</div>
                  </div>
                `;

                boardList.appendChild(newBoard);
              });

              // 마지막 데이터의 boardID를 기준으로 cursor 설정
              if (res.data.length > 0) {
                cursor = res.data[res.data.length - 1].boardID;
                console.log("Updated cursor:", cursor);
                console.log("res.data.length", res.data.length);
                console.log("res.data", res.data);
                observeLastBoard(io, document.querySelectorAll(".nowBox-list"));
              }
            })
            .catch(function (error) {
              console.error("보드 데이터를 불러오는데 실패했습니다", error);
            });
        }
        //-------------------------------------------------------------------------------------------------------

        getBoard();

        function callback(entries, observer) {
          entries.forEach(function (entry) {
            if (cursor == 1) {
              return;
            }
            if (entry.isIntersecting) {
              observer.unobserve(entry.target);
              console.log("커서", cursor); //왜 늘어나지....왜?
              getBoard();
              // 새로 생성된 nowBox-list를 감시
              observeLastBoard(
                observer,
                document.querySelectorAll(".nowBox-list")
              );
            }
          });
        }

        function observeLastBoard(io, boards) {
          if (boards.length > 0) {
            const lastBoard = boards[boards.length - 1];
            io.observe(lastBoard);
          }
        }

        //-----------관찰하는 시점을 바꿔야함.(맨아래 보다 위로 올리기)
        //관찰자 객체 생성
        const io = new IntersectionObserver(callback, { threshold: 0.7 });
       
        //보드 상세페이지로이동
        function moveBoardDetail(boardID){
          console.log(boardID);
          window.location.href = `/boardDetail/${boardID}`//  로 보내야함  boardDetail:boardID
        }

      </script>
    </div>
  </body>
</html>
