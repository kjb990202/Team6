<!DOCTYPE html>
<html lang="ko" class="h-100" data-bs-theme="auto">
  <head>
    <!-- CDN들 불러오기 -->
    <%- include('../views/components/cdn.ejs') %>
    <!-- CSS 연결 -->
    <link href="../static/css/index.css" rel="stylesheet" />
    <title>SeSAC-it</title>
  </head>
  <body class="d-flex h-100 text-center text-bg-white">
    <!-- 헤더 : 상단 메뉴바-->
    <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">
      <header class="container">
        <div><%- include('../views/components/header.ejs') %></div>
      </header>
      <main>
        <div class="wrapper-squares">
          <div
            class="square square1 square-brand square-pulse square-center"
            id="activeball"
          >
            SeSAC-it
          </div>
        </div>
      </main>
    </div>
  </body>
  <script>
    const confettiColors = ["#f2d74e", "#95c3de", "#ff9a91", "#add"];
    const max = 60;
    let particles = [];
    let animationFrameId;

    class Spread {
      constructor(color) {
        // 속도 3~6 랜덤 적용
        this.speed = 3 + Math.random() * 6;
        this.vx = Math.random() * this.speed - Math.random() * this.speed;
        this.vy = Math.random() * this.speed - Math.random() * this.speed;
        //  크기 20~60 랜덤 적용
        this.radius = 20 + Math.round(Math.random() * 60);
        this.x = ($(window).width() - this.radius) / 2;
        this.y = ($(window).height() - this.radius) / 2;
        this.shape = $(
          '<svg class="confetti"><rect width="100" height="100" fill="' +
            color +
            '"/></svg>'
        );
        this.shape.css({ width: this.radius, height: this.radius });
        $("body").append(this.shape);
      }

      move() {
        this.x += this.vx;
        this.y += this.vy;
        this.shape.css({
          left: this.x,
          top: this.y,
          transform: "rotate(" + this.y + "deg)",
        });
        if (this.x < 0 || this.x > $(window).width() - this.radius)
          this.vx = -this.vx;
        if (this.y < 0 || this.y > $(window).height() - this.radius)
          this.vy = -this.vy;
        return this;
      }
    }

    function randomColor() {
      return confettiColors[Math.floor(Math.random() * confettiColors.length)];
    }

    function startAnimation() {
      if (animationFrameId) {
        cancelAnimationFrame(animationFrameId);
        $(".confetti").remove();
      }
      particles = [];
      for (let i = 0; i < max; i++) {
        particles.push(new Spread(randomColor()));
      }
      update();
    }

    function update() {
      particles = particles.filter((p) => p.move());
      animationFrameId = requestAnimationFrame(update);
    }

    $("#activeball").click(startAnimation);
  </script>
</html>
